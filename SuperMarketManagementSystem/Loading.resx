<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MyProgress.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKcAAACnCAYAAAB0FkzsAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAyGSURBVHhe7Z0tcNw6FIULHywMDHzwwcLAwsDAwMLCwrCF
        hYGFhYGBgYGB6e8sDAwM7Dtn57qzka682rW8lq3zzdzJzFqRben4SrqS5TdCCCGEEEIIIYQQQggh2uD7
        9+///fz58z3sqrPfv39f//r1667PkObL9v/AzmFnlq0Q+VA4P378+ARhrUxga9ifMQznesJfCvjahHu2
        Xq//sUsRrQMhvjMx3m4LZ2K7h63kYRsDnukEYvyAyr9B5T9vCaJmu+MDhGs/tdsQS4FNJSr4AnazVeFz
        tXs+XLint3Z7Yo6wWbQBSQkPyb4n+6BsbrvBDQdIZzvs1SDK8niEeefYy5DfV/y9sNsVcwAVdgk7aCCD
        Cn9ipZuYztkntWyLsx0B4EOE8w+55it500ph0w0hfWRFeRWYMqSnV73h/3779u1fy24y2K/E9Vyaxz/k
        XlbI48SyE1NCb8HBwp4VSQ+1oueybKqFDwwfHFxvdlcAZfECcX+m0C0bcWxMlFn9SaZjPBH/M1ozPTYU
        Ku6F8dfs5p/3zAfYshBjQ4Gh4LM8CUS5yEED7qsb7L2E9xyaPcCX9q9iDNiXYoWEhe8Z07XQrFmZfDYB
        umWxZfdz6MrMDnjLDzkV0IooQ9h0o3wYYcgRKQdNauqHQs+AwuR0nlfIfw2V8rVFUYZsibS3ucfxpzn3
        vycHBcgY4C5P8KBCjrGHundGjAJG2X20fxG5oOA4m+IWKo2iRcF+suQiAR9wlNeu0f2NmvkM7InnFJ9X
        iBtDgbMJV6A5E5TVP3zYYX1N/aMGSz2g8DgXnQym8xjsvSUXe2Jx0mT/3cSrkFMICoYrxPue7Dt5y+HQ
        izL05JTvX0M9XFlygQLhQg23oGgqrPKYM0gONiHga0vaLhSeVzg0HGMzrtXgIwEvykUmfWE6DpTafG2E
        T6dTIJ2pGT8C1sz3zbrdI01bI/kdBdLuEzsRfS0Y7KEZgfZ5TIrWkokjg/Lv6/tToMt2GDv6mBr4TAzq
        oC9qcrtYgXLxhnPDG9M0Wj1AnIw3uyP5RbZsfCK9m6VJmPWBOnmX8qAQ6GdLNn/sSXRvFL+rKa8U1A0X
        3rj1toh1DeijnOAG3SlJDX7qB/WUHCShXucdg8ZNpBZx3FgSUTnsdjn1t5kkofOxZPMCN8CXsaKbgi13
        1LdQIMRUlOXOkswH3Iw7AJr109Y4qD+3FaRwLUn9QHynuGA3FIHfNVc+U/rGD7OpV1ysu5hgVk+YcKEI
        E3Vbf4uY6jzD5tc3ES50Mk791h19MbcfxcVm8VSJvUC9uq0jg/eWpC4gQu6uEV0wflc/c2HYuMIL0Ne3
        QIQCdC5UgfYFk+rC8XdLMj18UnBR0d5FEOyzmvNlg3p+cOr9pZp6x5PCDf9fXSANv3+wJGKhsI/p1T1s
        +hlAPiGpvoclEQuHXTen/v9M/h48hOmGFfSCfjuYg/KC89N5T/Y1vYvCk6TXShsjNTiazEl5F1RVZ1gc
        jZSjgh3fe/Z4zeWskhZ7UY33lNcUIdU4LHlN4TG508LJuOfjdBcgqiXlPSHa47xzhJNHc+iMddlh0TgU
        YqgP2KMdHg97MryVR9o3U2xgCxrqgwbRjrtiCSeJ3sajG7fDQmyALqJXOkYfk0xyUjE7oAvXibHltSRl
        Qcbcz/HVCWmaqhQhR+/+TdbRFbMEQowGzvzNDpcFmUdN+tFCBGJ20EuGesFvz3a4HCk3zabekggRQTGG
        mineDcRJvNcw1nZYCBdoJPqKHFrbsq9xQJzRuk0F3sUuKMRQN7CyK5WQobcViT6oJHphEx7qpmi/E/3K
        t+EJaOpvihy8fie7iXZ4GMjI25RL/U2RBbQS9TvZTbTDw/Dim+pvily8fifEWSbeSSGGmRcfcYnFAiFG
        8U5YmbdzkVG0Lw5PaIeF6AVjk2iVEvTzYoeHgYyiDi0/j2yHhdiJpyGK1g4fhjdSL6Z60QzQjbdtzbDW
        F31Lb7sR7eYh9gJCjBaBQFvDtitCJt6nPvQlDLEXiYjPsHXAULy33czKDguRBTRzEWiINszJUd1Oppq2
        FHsBJ+ctHBq2FbsX44RJnGIvONXt6GjY2MXryA4eZYnmSIhz2BQ4MohWI9FF22EhskiEJIe9tYtMvFcz
        6vxigqiaUEc0O3QYyGAdZkgXbYeFyCbUEc0OHQYykDhFEYprif2CohmKZoF2yoqzeIaiWeDovLd3D98B
        BBlEy+W0w4c4hFBHNDt0GMhAoSQxGHpIR0fDXnRDJt77HxKn2At2BUMdwYYF4TV9KUqQEOewfbYgzmsn
        U4lT7EViXfCwhR9owqMlc1ybZ4eFyAI68l5yGyZOrlYOM2VTb4eFyAI6il4PZqtshw8jofh7OyxEFl73
        kIK1w4fhdWQHhwBEc0A3Xkjy3A4fDjLxIvv65pDIBhqKpsGLvF6OjKLXOjn6ssNC9AJHltoIbvjHC5CR
        twHosNc6RTPQkYX6gZX5lgAyWgUZD3+tUzQD9OK9Xn5rh4eBjLzXOrWxgsiCocdQP8WcW2LqiX2Gt5ZE
        iCTQSrTssshIvWP0E4hFchTHNqprFosFOvH6m2W7hMhQ/U6xN55TQ4tbZsvtDrrh8CQ09TtFH9CI1x0s
        vx4YGUfBeJiWzwkXzgCFeoEwX+DQyn85mH3M8GSwMvEqsTigjSg+Dhu2TC5FItKveXbhAi8ZzaePOrOI
        E0R9CJxQX9YQr2C/MtSJNenjjVFwAm8zWY3axSu8UTps3B2xoXw3qKqva4gODnjgxLxPCo4/aYMTeR9p
        1VbcYgO0EMXEIcynUUbpIezUTnZyUT3QQxRyRDM/7H2hXNiphRij1fEaGAk23aEuTBvHW5zuxTzlPQV0
        4E3UHHfADBGeyHuKbVJek79bkuORmNSX92wU1P/0XrODWyE6FyPv2SBVec0OXIC3Cx29p1YrNQTqPdrH
        FTbt5EzKe3LAZEnEwkF9ewuK62hBcSGR96RpB+TlYwPjaIEHDIcqGHvgIk5xgdHIHaY594XD4LpT7+za
        1fOVP1yMtyCErl2bLywUBta9OofV9clzunBc1GNwkd3gSOs9FwjqNwodsQWtsr7pysOLNavrSRKD6Wkp
        691YGBcdfWXYLlqxz4WAOva+nU57qGIQlIIuHRfvreV7YR/FkomZYvXrjc5Zx/V/ZQUX6c4WwHBvCs7P
        GdSht5aXwiz7LvqYeKuWzNT/nCkUoFOftHHeqBwL9j1w0d6U1ryeMrEBdeYOdvH7PKMxuGgG593+CUyb
        McwEzvShHqNxBA2/z/drfrx476ZoOFbPLIJw6XMw+H3+LSBjX4mb0wi+Yjh4RT1F+xSYLWenF29hMg0C
        fdZrxfVhYwZv8TCN8cxlRV1wU7fBTXaGe12fWjIxMSbMvrpa3nS03XRqBP+sJXbTgzpiU+56TNYRji/X
        idjNRwtEaLx5mAZJE0HhoR7cPibq5aUJ57GrEGDaa/7IWLgoNSpnnbTjNPoEaqY46JGA8M5gqThmW8Ls
        gEBPUACpESHfQ/qCNHrNeERSYT4aBdv0OADiYx/UXUxg9qiBUnms3FMjchqSKILCguKWee46UBqbFjzh
        et2jEChPNuOpaWUa45h6e2Gb1MtSW3bDJ96SiwOAKFMrizq7VRknQOFc0lMGBfbX7Im/sOQiE04To9zc
        GPOWaY/VXdgnQtxY6JbdatpzN/SCPWtrN4YHXvHlfWA/dFczbx52xbT2b2ILlA1bob6+Je0e5af+5SGg
        8C74ZAcFGtoaaRS4N1AWXKbYFwHpTM34UKyZ7wt7dPbQskj3EOUj0qoZLwmFB9vVTNGaEinvFfe8U5RI
        x5DcJ3WDRoIdfBS099k6zzj7dLnUyjBRJmfYAmOISEH1Y2BN/a7QyMboMTgVugRvypAQB4q4l5wWZBN6
        g6kJnwIKDpWQJVIaK4uVO6cpUXo8XDeD530LZUJbQ8gf1YRXACovdzCwbWt6VPxl019Nk4dr4ad0zi2U
        tiveGxoFrBVdNWIidTezzTCKlYK4YPNpWY6OraWkGBksz+1DhtZ0pGJWsE/KykaFZfXNeoyeiB55xWaS
        4j9EuPwf+98P+Msmmnnu6xVfGfJ5pudnvnYaMTdQeQxBfYUl5+yHmuVNwd2NeR4zxnwXG4VoEvblWKlW
        uV6l12wP9Ny4B001tgA8HPf/Ycw0e7R/RHu0bsk5Hyq7ZNEibCIpBBuUsGke2lfNNpyLawfucO7NYEze
        UWRhAxn2Wa84+KCIzLJjjib07v9umBf+ckHLGR8KO5UQ40GxSXBCCCGEEEIIIYRYKm/e/A+gWuYTLkDK
        twAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>